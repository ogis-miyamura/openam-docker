version: "3.7"

services:

    # Portainer
    # 127.0.0.1 admin-portainer.example.com
    # http://admin-portainer.example.com:9000
    admin-portainer:
        image: portainer/portainer
        container_name: admin-portainer
        ports:
            - "${PORT_PORTAINER_WEB}:9000"
            - "${PORT_PORTAINER_AGENT}:8000"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - admin-portainer-data:/data
        restart: always

    # # Fluentd
    # admin-fluentd:
    #     build: ./resources/admin-fluentd
    #     container_name: admin-fluentd
    #     ports:
    #         - "24224:24224"
    #         - "24224:24224/udp"
    #     volumes:
    #         - admin-fluentd-log:/fluentd/log
    #         - ./resources/admin-fluentd/fluent.conf:/fluentd/etc/fluent.conf
    #     restart: always

    # # Elasticsearch
    # # https://www.elastic.co/guide/en/kibana/current/docker.html
    # admin-elasticsearch:
    #     image: docker.elastic.co/elasticsearch/elasticsearch:7.9.0
    #     container_name: admin-elasticsearch
    #     hostname: admin-elasticsearch
    #     domainname: ${OPENAM_DOMAIN_NAME}
    #     environment:
    #         - discovery.type=single-node
    #         - cluster.name=docker-cluster
    #         - bootstrap.memory_lock=true
    #         - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    #     ulimits:
    #         memlock:
    #             soft: -1
    #             hard: -1
    #     ports:
    #         - ${PORT_EFK_ELASTICSEARCH}:9200
    #     volumes:
    #         - admin-elasticsearch-data:/usr/share/elasticsearch/data

    # # Kibana
    # # https://www.elastic.co/guide/en/kibana/current/docker.html
    # # 127.0.0.1 admin-kibana admin-kibana.example.com
    # # http://admin-kibana.example.com:5601
    # admin-kibana:
    #     image: docker.elastic.co/kibana/kibana:7.9.0
    #     container_name: admin-kibana
    #     hostname: admin-kibana
    #     domainname: ${OPENAM_DOMAIN_NAME}
    #     environment:
    #         ELASTICSEARCH_HOSTS: http://admin-elasticsearch:9200
    #         ELASTICSEARCH_URL: http://admin-elasticsearch:9200
    #     ports:
    #         - ${PORT_EFK_KIBANA}:5601
    #     # volumes:
    #     #     - ./resources/admin-kibana/kibana.yml:/usr/share/kibana/config/kibana.yml


    # openam-lb (Apache)
    # 127.0.0.1 openam-lb.example.com
    # http://openam-lb.example.com/openam
    # http://openam-lb.example.com/balancer-manager/
    openam-lb:
        image: ${OPENAM_APACHE_IMAGE_TAG}
        container_name: ${OPENAM_LB_HOSTNAME}
        ports:
            - "${PORT_OPENAM_LB_HTTP}:80"
            # - "${PORT_OPENAM_LB_HTTPS}:443"
        volumes:
            - ./resources/openam-lb/httpd.conf:/usr/local/apache2/conf/httpd.conf:ro
        env_file:
            - .env
        restart: always


    # # openam-lb (nginx)
    # # 127.0.0.1 openam-lb.example.com
    # # http://openam-lb.example.com/openam
    # openam-lb:
    #     image: ${OPENAM_NGINX_IMAGE_TAG}
    #     container_name: ${OPENAM_LB_HOSTNAME}
    #     ports:
    #         - "${PORT_OPENAM_LB_HTTP}:80"
    #         # - "${PORT_OPENAM_LB_HTTPS}:443"
    #     volumes:
    #         - ./resources/openam-lb/nginx-openam.conf.template:/etc/nginx/templates/nginx-openam.conf.template:ro
    #     env_file:
    #         - .env
    #     restart: always

    # # openam-lb TLS Certificate
    # openam-tls-cert:
    #     image: alpine:latest
    #     container_name: openam-tls-cert
    #     # volumes:
    #     #     - openam-primary-base-dir:/opt/logs/openam-base-dir:ro
    #     #     - openam-primary-tomcat-logs:/opt/logs/openam-tomcat-logs:ro
    #     # entrypoint: "sh /opt/scripts/watch_openam_logs.sh"


    # openam-primary
    # 127.0.0.1 openam-primary.example.com
    # http://openam-primary.example.com:18080/openam
    openam-primary:
        image: ${OPENAM_TOMCAT_IMAGE_TAG}
        container_name: ${OPENAM_PRIMARY_HOSTNAME}
        hostname: ${OPENAM_PRIMARY_HOSTNAME}
        domainname: ${OPENAM_DOMAIN_NAME}
        ports:
            - "${PORT_OPENAM_PRIMARY}:8080"
        volumes:
            - /dev/urandom:/dev/random:ro
            - openam-shared:/opt/shared
            - openam-primary-base-dir:${OPENAM_BASE_DIR}
            - openam-primary-tomcat-logs:/usr/local/tomcat/logs
            - ./resources/openam/wait_download.sh:/opt/install/wait_download.sh:ro
            - ./resources/openam/openam-distribution-ssoconfiguratortools-15.0.0-SNAPSHOT.zip:/opt/install/openam-distribution-ssoconfiguratortools-15.0.0-SNAPSHOT.zip:ro
            - ./resources/openam/primary.configParam:/opt/install/.configParam:ro
        env_file:
            - .env
        entrypoint: "sh /opt/install/wait_download.sh"

    # Tail openam-primary
    openam-primary-log:
        build: ./resources/admin-tail
        container_name: ${OPENAM_PRIMARY_HOSTNAME}-log
        volumes:
            - ./resources/admin-tail/watch_openam_logs.sh:/opt/scripts/watch_openam_logs.sh:ro
            - openam-primary-base-dir:/opt/logs/openam-base-dir:ro
            - openam-primary-tomcat-logs:/opt/logs/openam-tomcat-logs:ro
        env_file:
            - .env
        entrypoint: "bash /opt/scripts/watch_openam_logs.sh"
        # logging:
        #     driver: "fluentd"
        #     options:
        #         fluentd-address: "localhost:24224"
        #         tag: "docker.{{.ImageName}}.{{.Name}}.{{.ID}}"

    # openam-secondary
    # 127.0.0.1 openam-secondary.example.com
    # http://openam-secondary.example.com:28080/openam
    openam-secondary:
        image: ${OPENAM_TOMCAT_IMAGE_TAG}
        container_name: ${OPENAM_SECONDARY_HOSTNAME}
        hostname: ${OPENAM_SECONDARY_HOSTNAME}
        domainname: ${OPENAM_DOMAIN_NAME}
        ports:
            - "${PORT_OPENAM_SECONDARY}:8080"
        volumes:
            - /dev/urandom:/dev/random:ro
            - openam-shared:/opt/shared
            - openam-secondary-base-dir:${OPENAM_BASE_DIR}
            - openam-secondary-tomcat-logs:/usr/local/tomcat/logs
            - ./resources/openam/wait_install_primary.sh:/opt/install/wait_install_primary.sh:ro
            - ./resources/openam/wait_download.sh:/opt/install/wait_download.sh:ro
            - ./resources/openam/openam-distribution-ssoconfiguratortools-15.0.0-SNAPSHOT.zip:/opt/install/openam-distribution-ssoconfiguratortools-15.0.0-SNAPSHOT.zip:ro
            - ./resources/openam/secondary.configParam:/opt/install/.configParam:ro
        env_file:
            - .env
        entrypoint: "sh /opt/install/wait_install_primary.sh"

    # Tail openam-secondary
    openam-secondary-log:
        build: ./resources/admin-tail
        container_name: ${OPENAM_SECONDARY_HOSTNAME}-log
        volumes:
            - ./resources/admin-tail/watch_openam_logs.sh:/opt/scripts/watch_openam_logs.sh:ro
            - openam-secondary-base-dir:/opt/logs/openam-base-dir:ro
            - openam-secondary-tomcat-logs:/opt/logs/openam-tomcat-logs:ro
        env_file:
            - .env
        entrypoint: "bash /opt/scripts/watch_openam_logs.sh"
        # logging:
        #     driver: "fluentd"
        #     options:
        #         fluentd-address: "localhost:24224"
        #         tag: "docker.{{.ImageName}}.{{.Name}}.{{.ID}}"

    # Policy agent
    # Application
    # External User datastore

volumes:
    # OpenAM Shared
    openam-shared:
    # OpenAM Primary
    openam-primary-base-dir:
    openam-primary-tomcat-logs:
    # OpenAM Secondary
    openam-secondary-base-dir:
    openam-secondary-tomcat-logs:
    # Admin tools
    admin-portainer-data:
    admin-elasticsearch-data:
    admin-fluentd-log:
